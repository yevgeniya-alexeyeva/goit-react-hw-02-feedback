{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","props","options","onLeaveFeedback","className","feedbackWrapper","map","option","onClick","name","button","type","Statistics","good","neutral","bad","total","positivePercentage","statisticsWrapper","statisticsItem","defaultProps","Section","title","children","Notification","message","App","state","countVoices","e","currentTarget","setState","prevState","countTotalFeedbacks","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","floor","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,kBAAoB,sCAAsC,eAAiB,qC,uLC4B9EC,EA1BS,SAACC,GACvB,IAAQC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,gBACjB,OACE,qBAAKC,UAAWC,kBAAhB,SACGH,EAAQI,KAAI,SAACC,GACZ,OACE,wBACEC,QAASL,EACTM,KAAMF,EACNH,UAAWM,SACXC,KAAK,SAJP,SAOGJ,GAFIA,S,OCXXK,EAAa,SAACX,GAClB,IAAQY,EAAkDZ,EAAlDY,KAAMC,EAA4Cb,EAA5Ca,QAASC,EAAmCd,EAAnCc,IAAKC,EAA8Bf,EAA9Be,MAAOC,EAAuBhB,EAAvBgB,mBACnC,OACE,sBAAKb,UAAWc,oBAAhB,UACE,uBAAMd,UAAWe,iBAAjB,mBAAwCN,KACxC,uBAAMT,UAAWe,iBAAjB,sBAA2CL,KAC3C,uBAAMV,UAAWe,iBAAjB,kBAAuCJ,KACvC,uBAAMX,UAAWe,iBAAjB,oBAAyCH,OACzC,uBAAMZ,UAAWe,iBAAjB,kCACwBF,WAM9BL,EAAWQ,aAAe,CACxBP,KAAM,EACNC,QAAS,EACTC,IAAK,GAWQH,QCfAS,EAfC,SAACpB,GACf,IAAQqB,EAAoBrB,EAApBqB,MAAOC,EAAatB,EAAbsB,SACf,OACE,0BAASnB,UAAU,UAAnB,UACE,6BAAKkB,IACJC,MCHQC,EAJM,SAACvB,GACpB,IAAQwB,EAAYxB,EAAZwB,QACR,OAAO,+BAAOA,KCyDDC,E,4MAnDbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,YAAc,SAACC,GACb,IAAQpB,EAASoB,EAAEC,cAAXrB,KACR,EAAKsB,UAAS,SAACC,GACb,OAAO,eAAGvB,EAAOuB,EAAUvB,GAAQ,O,EAIvCwB,oBAAsB,WACpB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGvEC,gCAAkC,WAChC,OAAO,EAAKZ,MAAMd,KACd2B,KAAKC,MAAO,EAAKd,MAAMd,KAAO,EAAKoB,sBAAyB,KAAO,IACnE,qB,4CAGN,WACE,MAA+BS,KAAKf,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEpB,QAASgC,OAAOS,KAAKD,KAAKf,OAC1BxB,gBAAiBuC,KAAKd,gBAG1B,cAAC,EAAD,CAASN,MAAO,aAAhB,SACGoB,KAAKT,sBACJ,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,KAAKT,oBACZhB,mBAAoByB,KAAKH,kCAG3B,cAAC,EAAD,CAAcd,QAAQ,+B,GA5ChBmB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BnD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,OAAS,mC","file":"static/js/main.10aea729.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsWrapper\":\"Statistics_statisticsWrapper__1D3Ed\",\"statisticsItem\":\"Statistics_statisticsItem__1pIUN\"};","import PropTypes from \"prop-types\";\r\nimport { feedbackWrapper, button } from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = (props) => {\r\n  const { options, onLeaveFeedback } = props;\r\n  return (\r\n    <div className={feedbackWrapper}>\r\n      {options.map((option) => {\r\n        return (\r\n          <button\r\n            onClick={onLeaveFeedback}\r\n            name={option}\r\n            className={button}\r\n            type=\"button\"\r\n            key={option}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport { statisticsWrapper, statisticsItem } from \"./Statistics.module.css\";\r\n\r\nconst Statistics = (props) => {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <div className={statisticsWrapper}>\r\n      <span className={statisticsItem}>Good: {good}</span>\r\n      <span className={statisticsItem}>Neutral: {neutral}</span>\r\n      <span className={statisticsItem}>Bad: {bad}</span>\r\n      <span className={statisticsItem}>Total: {total()}</span>\r\n      <span className={statisticsItem}>\r\n        Positive Percentage: {positivePercentage()}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Section = (props) => {\r\n  const { title, children } = props;\r\n  return (\r\n    <section className=\"section\">\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","const Notification = (props) => {\r\n  const { message } = props;\r\n  return <span>{message}</span>;\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countVoices = (e) => {\n    const { name } = e.currentTarget;\n    this.setState((prevState) => {\n      return { [name]: prevState[name] + 1 };\n    });\n  };\n\n  countTotalFeedbacks = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return this.state.good\n      ? Math.floor((this.state.good / this.countTotalFeedbacks()) * 100) + \"%\"\n      : \"no good feedbacks\";\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.countVoices}\n          />\n        </Section>\n        <Section title={\"Statistics\"}>\n          {this.countTotalFeedbacks() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedbacks}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackWrapper\":\"FeedbackOptions_feedbackWrapper__1Qq0v\",\"button\":\"FeedbackOptions_button__rV_pj\"};"],"sourceRoot":""}